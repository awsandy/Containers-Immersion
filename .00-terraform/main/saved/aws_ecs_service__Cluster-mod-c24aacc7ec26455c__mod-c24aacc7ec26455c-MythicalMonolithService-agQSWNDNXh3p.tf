#Â File generated by aws2tf see https://github.com/aws-samples/aws2tf
# aws_ecs_service.containersidc24aacc7ec26455c__mod-c24aacc7ec26455c-MythicalMonolithService-agQSWNDNXh3p:
resource "aws_ecs_service" "containersidc24aacc7ec26455c__mod-c24aacc7ec26455c-MythicalMonolithService-agQSWNDNXh3p" {
  cluster                            = aws_ecs_cluster.containersidc24aacc7ec26455c.arn
  deployment_maximum_percent         = 200
  deployment_minimum_healthy_percent = 0
  desired_count                      = 1
  enable_ecs_managed_tags            = false
  enable_execute_command             = false
  health_check_grace_period_seconds  = 0
  iam_role                           = "aws-service-role"
  launch_type                        = "FARGATE"
  name                               = "mod-c24aacc7ec26455c-MythicalMonolithService-agQSWNDNXh3p"
  platform_version                   = "LATEST"
  scheduling_strategy                = "REPLICA"
  tags                               = {}
  tags_all                           = {}
  task_definition                    = "Monolith-Definition-mod-c24aacc7ec26455c:1"

  deployment_circuit_breaker {
    enable   = false
    rollback = false
  }

  deployment_controller {
    type = "ECS"
  }

  load_balancer {
    container_name   = "monolith-service"
    container_port   = 80
    target_group_arn = "arn:aws:elasticloadbalancing:eu-west-1:479455118968:targetgroup/mod-c-Mythi-1FH7EXGEU82CO/5ce99e3459c42fb4"
  }

  network_configuration {
    assign_public_ip = false
    security_groups = [
      aws_security_group.sg-0b851d3810e0db083.id,
    ]
    subnets = [
      aws_subnet.subnet-03cf086333c1b0466.id,
      aws_subnet.subnet-0dbd59ab370f60086.id,
    ]
  }

  timeouts {}
}
